#wpforms-builder-overlay {
  background: radial-gradient(50% 50% at 50% 50%, #f8f8f8 37.5%, #e8e8e8 100%);
  cursor: default;
  height: 100%;
  min-width: 0;
  overflow: hidden;
  position: fixed;
  z-index: 100;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  -webkit-transition: opacity 0.5s ease-out;
  -moz-transition: opacity 0.5s ease-out;
  -ms-transition: opacity 0.5s ease-out;
  -o-transition: opacity 0.5s ease-out;
  transition: opacity 0.5s ease-out;
}

#wpforms-builder-overlay.fade-out {
  opacity: 0;
}

.wpforms-builder-overlay-content {
  padding-top: 20%;
  text-align: center;
}

.wpforms-builder-overlay-content i {
  display: block;
  left: calc( 50% - 50px);
  position: absolute;
  top: calc( 50% - 50px);
}

.wpforms-builder-overlay-content i.spinner {
  background-image: url("../../images/builder/loading-spinner.svg");
  border-radius: 50%;
  height: 100px;
  width: 100px;
  -webkit-animation: wpforms-spinner-rotation 0.8s linear infinite;
  -moz-animation: wpforms-spinner-rotation 0.8s linear infinite;
  -ms-animation: wpforms-spinner-rotation 0.8s linear infinite;
  -o-animation: wpforms-spinner-rotation 0.8s linear infinite;
  animation: wpforms-spinner-rotation 0.8s linear infinite;
}

.wpforms-builder-overlay-content i.avatar {
  background-color: #ffffff;
  background-image: url("../../images/builder/loading-avatar.svg");
  border-radius: 50%;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
  height: 80px;
  margin: 10px;
  width: 80px;
}

@keyframes wpforms-spinner-rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
